{"version":3,"sources":["components/Input.jsx","services/fetch.js","actions/index.js","components/SubmitButton.jsx","pages/Login.js","components/Header.jsx","components/PaymentMethod.jsx","components/Tag.jsx","components/Currencies.jsx","components/Form.jsx","components/Table.jsx","components/EditForm.jsx","pages/Wallet.js","App.js","serviceWorker.js","reducers/user.js","reducers/wallet.js","reducers/index.js","store/store.js","index.js"],"names":["Input","this","props","type","placeholder","testId","id","labelTxt","value","onChange","name","htmlFor","data-testid","Component","defaultProps","apiEndpoint","getCurrency","a","fetch","request","json","response","USDT","currencies","Object","keys","getCotation","getCurrencyAPI","dispatch","payload","isFetching","currencyArray","console","log","saveExpenses","expense","cotations","cotation","Button","onClick","disabled","buttonTxt","Login","state","email","password","shouldRedirect","handleChange","bind","handleClick","checkCredentials","target","setState","event","preventDefault","userStateToRedux","currencyStateToProps","test","length","emailIsValid","passwordIsValid","to","connect","objState","Header","sumOfExpenses","walletStateFromRedux","expenses","total","index","exchangeRates","currency","ask","toFixed","userStateFromRedux","className","src","alt","user","wallet","PaymentMethod","Tag","Currencies","currencyFetchToRedux","currencyStateFromRedux","map","item","key","Form","description","method","tag","displaySubmitButton","expensesToRedux","submitButtonProps","SubmitButton","despesasInputProps","descricaoInputProps","currencysSelectProps","paymentMethodProps","tagSelectProps","Table","editExpense","removeItem","editExpenses","moeda","moedaConvertida","valorTratado","rate","displayTable","removeExpense","edit","EditForm","expenseToEdit","Wallet","shoudlEdit","React","App","exact","path","component","Boolean","window","location","hostname","match","initialState","userReducer","action","totalExpenses","walletReducer","filter","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.afcd310c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Input extends Component {\n  render() {\n    const { type, placeholder, testId, id, labelTxt, value, onChange, name } = this.props;\n    return (\n      <label htmlFor={ id }>\n        { labelTxt }\n        <input\n          type={ type }\n          placeholder={ placeholder }\n          data-testid={ testId }\n          id={ id }\n          value={ value }\n          onChange={ onChange }\n          name={ name }\n        />\n      </label>\n    );\n  }\n}\n\nInput.propTypes = {\n  type: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  testId: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  labelTxt: PropTypes.string,\n  value: PropTypes.string,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nInput.defaultProps = {\n  testId: '',\n  labelTxt: '',\n  value: '',\n  name: '',\n  onChange: () => {},\n};\n\nexport default Input;\n","const apiEndpoint = 'https://economia.awesomeapi.com.br/json/all';\n\nexport const getCurrency = async () => {\n  const request = await fetch(apiEndpoint);\n  const response = await request.json();\n  delete response.USDT;\n  const currencies = Object.keys(response);\n  return currencies;\n};\n\nexport const getCotation = async () => {\n  const request = await fetch(apiEndpoint);\n  const response = await request.json();\n  delete response.USDT;\n  return response;\n};\n","// Coloque aqui suas actions\nimport { getCurrency, getCotation } from '../services/fetch';\n\nexport const USER_LOGIN = 'USER_LOGIN';\nexport const REQUEST_START = 'REQUEST_START';\nexport const REQUEST_SUCCESS = 'REQUEST_SUCCESS';\nexport const SAVE_EXPENSE = 'SAVE_EXPENSE';\nexport const REMOVE_EXPENSE = 'REMOVE_EXPENSE';\nexport const EDIT_FORM = 'EDIT_FORM';\n\nexport const loginAction = (value) => ({\n  type: USER_LOGIN,\n  payload: value,\n});\n\nconst requestStart = () => ({\n  type: REQUEST_START,\n  payload: { isFetching: true },\n});\n\nconst requestSuccess = (currencies) => ({\n  type: REQUEST_SUCCESS,\n  payload: { isFetching: false, currencies },\n});\n\nexport const getCurrencyAPI = () => async (dispatch) => {\n  dispatch(requestStart());\n  try {\n    const currencyArray = await getCurrency();\n    dispatch(requestSuccess(currencyArray));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveExpenses = (expense, cotations) => ({\n  type: SAVE_EXPENSE,\n  payload: expense,\n  cotation: cotations,\n});\n\nexport const saveAndFetchExpenses = (expense) => async (dispatch) => {\n  try {\n    const cotations = await getCotation();\n    dispatch(saveExpenses(expense, cotations));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const removeExpense = (id) => ({\n  type: REMOVE_EXPENSE,\n  payload: id,\n});\n\nexport const editForm = (object) => ({\n  type: EDIT_FORM,\n  edit: true,\n  payload: object,\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Button extends Component {\n  render() {\n    const { onClick, disabled, buttonTxt, name, id } = this.props;\n    return (\n      <button\n        type=\"submit\"\n        onClick={ onClick }\n        disabled={ disabled }\n        name={ name }\n        id={ id }\n      >\n        { buttonTxt }\n      </button>\n    );\n  }\n}\n\nButton.propTypes = {\n  buttonTxt: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n  name: PropTypes.string,\n  id: PropTypes.string,\n};\n\nButton.defaultProps = {\n  disabled: false,\n  buttonTxt: '',\n  name: '',\n  id: '',\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Input from '../components/Input';\nimport { loginAction, getCurrencyAPI } from '../actions';\nimport Button from '../components/SubmitButton';\n\nconst passwordLength = 6;\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      shouldRedirect: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.checkCredentials = this.checkCredentials.bind(this);\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleClick(event) {\n    event.preventDefault();\n    const { email } = this.state;\n    const { userStateToRedux, currencyStateToProps } = this.props;\n    userStateToRedux(email);\n    currencyStateToProps();\n    this.setState({\n      shouldRedirect: true,\n    });\n  }\n\n  // source: https://ui.dev/validate-email-address-javascript/\n  emailIsValid(email) {\n    return /\\S+@\\S+\\.\\S+/.test(email);\n  }\n\n  passwordIsValid(password) {\n    return password.length >= passwordLength;\n  }\n\n  checkCredentials() {\n    const { email, password } = this.state;\n    return this.emailIsValid(email) && this.passwordIsValid(password);\n  }\n\n  render() {\n    const { email, password, shouldRedirect } = this.state;\n\n    return (\n      <main id=\"mainSection\">\n        <form id=\"loginForm\">\n          <Input\n            type=\"email\"\n            placeholder=\"Digite seu email\"\n            testId=\"email-input\"\n            id=\"emailInput\"\n            labelTxt=\"Login\"\n            value={ email }\n            name=\"email\"\n            onChange={ this.handleChange }\n          />\n          <Input\n            type=\"password\"\n            placeholder=\"Digite sua senha\"\n            testId=\"password-input\"\n            id=\"passwordInput\"\n            labelTxt=\"Senha\"\n            value={ password }\n            name=\"password\"\n            onChange={ this.handleChange }\n          />\n          <div>\n            <Button\n              onClick={ this.handleClick }\n              disabled={ !this.checkCredentials() }\n              buttonTxt=\"Entrar\"\n            />\n          </div>\n          { shouldRedirect ? <Redirect to=\"/carteira\" /> : null }\n        </form>\n      </main>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  userStateToRedux: (objState) => dispatch(loginAction(objState)),\n  currencyStateToProps: () => dispatch(getCurrencyAPI()),\n});\n\nLogin.propTypes = {\n  userStateToRedux: PropTypes.func.isRequired,\n  currencyStateToProps: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass Header extends Component {\n  constructor() {\n    super();\n    this.sumOfExpenses = this.sumOfExpenses.bind(this);\n  }\n\n  sumOfExpenses() {\n    const { walletStateFromRedux } = this.props;\n    const zero = '0';\n    if (walletStateFromRedux) {\n      const { expenses } = walletStateFromRedux;\n      if (expenses) {\n        let total = 0;\n        for (let index = 0; index < expenses.length; index += 1) {\n          const value = expenses[index].value\n            ? expenses[index].value\n              * expenses[index].exchangeRates[expenses[index].currency].ask\n            : 0;\n          total += value;\n        }\n        return total.toFixed(2);\n      }\n      return zero;\n    }\n    return zero;\n  }\n\n  render() {\n    const imgPath = 'https://www.abcdacomunicacao.com.br/wp-content/uploads/Trybe_logo-baixa.png';\n    const { userStateFromRedux } = this.props;\n    const { email } = userStateFromRedux;\n    const texto1 = 'Total de despesas: ';\n    const texto2 = 'BRL';\n\n    return (\n      <header>\n        <div className=\"headerLeftDiv\">\n          <img src={ imgPath } alt=\"trybeLogo\" className=\"headerImg\" />\n        </div>\n        <div className=\"headerRightDiv\">\n          <div data-testid=\"email-field\">\n            { email }\n          </div>\n          <div data-testid=\"header-currency-field\">\n            <p>\n              { texto1 }\n              <span data-testid=\"total-field\">{ this.sumOfExpenses() }</span>\n              { texto2 }\n            </p>\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  userStateFromRedux: state.user,\n  walletStateFromRedux: state.wallet,\n});\n\nHeader.propTypes = {\n  userStateFromRedux: PropTypes.shape({\n    email: PropTypes.string,\n  }).isRequired,\n  walletStateFromRedux: PropTypes.shape({\n    currencies: PropTypes.arrayOf(PropTypes.string),\n    expenses: PropTypes.arrayOf(PropTypes.object),\n    totalExpenses: PropTypes.number,\n  }).isRequired,\n};\n\nexport default connect(mapStateToProps, null)(Header);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass PaymentMethod extends Component {\n  render() {\n    const { value, name, onChange } = this.props;\n    return (\n      <label htmlFor=\"paymentMethod\">\n        Método de pagamento\n        <select\n          id=\"paymentMethod\"\n          onChange={ onChange }\n          value={ value }\n          name={ name }\n        >\n          <option value=\"Dinheiro\">Dinheiro</option>\n          <option value=\"Cartão de crédito\">Cartão de crédito</option>\n          <option value=\"Cartão de débito\">Cartão de débito</option>\n        </select>\n      </label>\n    );\n  }\n}\n\nPaymentMethod.propTypes = {\n  value: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default PaymentMethod;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Tag extends Component {\n  render() {\n    const { value, name, onChange } = this.props;\n    return (\n      <label htmlFor=\"paymentTag\">\n        Tag\n        <select\n          id=\"paymentTag\"\n          onChange={ onChange }\n          value={ value }\n          name={ name }\n        >\n          <option value=\"Alimentação\">Alimentação</option>\n          <option value=\"Lazer\">Lazer</option>\n          <option value=\"Trabalho\">Trabalho</option>\n          <option value=\"Transporte\">Transporte</option>\n          <option value=\"Saúde\">Saúde</option>\n        </select>\n      </label>\n    );\n  }\n}\n\nTag.propTypes = {\n  value: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Tag;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getCurrencyAPI } from '../actions/index';\n\nclass Currencies extends Component {\n  componentDidMount() {\n    const { currencyFetchToRedux } = this.props;\n    currencyFetchToRedux();\n  }\n\n  render() {\n    const { currencyStateFromRedux, value, name, onChange } = this.props;\n\n    return (\n      <label htmlFor=\"moeda\">\n        Moeda\n        <select\n          id=\"moeda\"\n          value={ value }\n          name={ name }\n          onChange={ onChange }\n        >\n          { currencyStateFromRedux.map((item) => (\n            <option key={ item }>{ item }</option>)) }\n        </select>\n      </label>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currencyStateFromRedux: state.wallet.currencies,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  currencyFetchToRedux: () => dispatch(getCurrencyAPI()),\n});\n\nCurrencies.propTypes = {\n  value: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  currencyStateFromRedux: PropTypes.arrayOf(PropTypes.string).isRequired,\n  currencyFetchToRedux: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Currencies);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Input from './Input';\nimport PaymentMethod from './PaymentMethod';\nimport Tag from './Tag';\nimport Currencies from './Currencies';\nimport SubmitButton from './SubmitButton';\nimport { saveAndFetchExpenses } from '../actions/index';\n\nclass Form extends Component {\n  constructor() {\n    super();\n    this.state = {\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.displaySubmitButton = this.displaySubmitButton.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleClick(event) {\n    event.preventDefault();\n    const { expensesToRedux } = this.props;\n    const { value, description, currency, method, tag } = this.state;\n    expensesToRedux({ value, description, currency, method, tag });\n    this.setState({\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n    });\n  }\n\n  displaySubmitButton() {\n    const submitButtonProps = {\n      onClick: this.handleClick,\n      buttonTxt: 'Adicionar despesa',\n      name: '',\n      id: '',\n    };\n    return <SubmitButton { ...submitButtonProps } />;\n  }\n\n  render() {\n    const { value, description, currency, method, tag } = this.state;\n    const despesasInputProps = {\n      type: 'number',\n      placeholder: 'Despesa',\n      id: 'valueInput',\n      labelTxt: 'Valor',\n      value,\n      name: 'value',\n      onChange: this.handleChange,\n    };\n    const descricaoInputProps = {\n      type: 'text',\n      placeholder: 'Detalhes da despesa',\n      id: 'descriptionInput',\n      labelTxt: 'Descrição',\n      value: description,\n      name: 'description',\n      onChange: this.handleChange,\n    };\n    const currencysSelectProps = {\n      value: currency,\n      onChange: this.handleChange,\n      name: 'currency',\n    };\n    const paymentMethodProps = {\n      value: method,\n      name: 'method',\n      onChange: this.handleChange,\n    };\n    const tagSelectProps = {\n      value: tag,\n      name: 'tag',\n      onChange: this.handleChange,\n    };\n\n    return (\n      <form>\n        <Input { ...despesasInputProps } />\n        <Input { ...descricaoInputProps } />\n        <Currencies { ...currencysSelectProps } />\n        <PaymentMethod { ...paymentMethodProps } />\n        <Tag { ...tagSelectProps } />\n        { this.displaySubmitButton() }\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  expensesToRedux: (state) => dispatch(saveAndFetchExpenses(state)),\n});\n\nForm.propTypes = {\n  expensesToRedux: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Form);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { removeExpense, editForm } from '../actions/index';\n\nclass Table extends Component {\n  constructor() {\n    super();\n    this.handleClick = this.handleClick.bind(this);\n    this.editExpense = this.editExpense.bind(this);\n  }\n\n  handleClick({ target }) {\n    const { name } = target;\n    const { removeItem } = this.props;\n    const id = name * 1;\n    removeItem(id);\n  }\n\n  async editExpense({ target }) {\n    const { name } = target;\n    const { expense, editExpenses } = this.props;\n    await editExpenses(expense[name]);\n  }\n\n  displayTable() {\n    const { expense } = this.props;\n    return (\n      expense.map((item) => {\n        const moeda = item.currency;\n        const moedaConvertida = item.exchangeRates[moeda].name;\n        const valorConvertido = item.value * item.exchangeRates[item.currency].ask;\n        const valorTratado = valorConvertido.toFixed(2);\n        const rate = item.exchangeRates[item.currency].ask * 1;\n\n        return (\n          <tr key={ item.id }>\n            <td>{ item.description }</td>\n            <td>{ item.tag }</td>\n            <td>{ item.method }</td>\n            <td>{ item.value }</td>\n            <td>{ moedaConvertida }</td>\n            <td>{ rate.toFixed(2) }</td>\n            <td>{ valorTratado }</td>\n            <td>Real</td>\n            <td>\n              <button\n                type=\"button\"\n                name={ item.id }\n                onClick={ this.editExpense }\n                data-testid=\"edit-btn\"\n              >\n                Editar\n              </button>\n              <button\n                type=\"button\"\n                onClick={ this.handleClick }\n                name={ item.id }\n                data-testid=\"delete-btn\"\n              >\n                Excluir\n              </button>\n            </td>\n          </tr>\n        );\n      })\n    );\n  }\n\n  render() {\n    return (\n      <table>\n        <thead>\n          <tr>\n            <th>Descrição</th>\n            <th>Tag</th>\n            <th>Método de pagamento</th>\n            <th>Valor</th>\n            <th>Moeda</th>\n            <th>Câmbio utilizado</th>\n            <th>Valor convertido</th>\n            <th>Moeda de conversão</th>\n            <th>Editar/Excluir</th>\n          </tr>\n        </thead>\n        <tbody>\n          { this.displayTable() }\n        </tbody>\n      </table>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  expense: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  removeItem: (id) => dispatch(removeExpense(id)),\n  editExpenses: (expense) => dispatch(editForm(expense)),\n});\n\nTable.propTypes = {\n  expense: PropTypes.arrayOf(PropTypes.object).isRequired,\n  removeItem: PropTypes.func.isRequired,\n  editExpenses: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Input from './Input';\nimport PaymentMethod from './PaymentMethod';\nimport Tag from './Tag';\nimport Currencies from './Currencies';\n\nclass EditForm extends Component {\n  constructor(props) {\n    super(props);\n    const { expense } = this.props;\n    const { value, description, currency, method, tag } = expense[0];\n    console.log(expense);\n\n    this.state = {\n      value,\n      description,\n      currency,\n      method,\n      tag,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    // this.startEditing = this.startEditing.bind(this);\n  }\n\n  /* componentDidMount() {\n    this.startEditing();\n  }\n\n  startEditing() {\n    const { expense } = this.props;\n    const { value, description, currency, method, tag } = expense;\n    this.setState = {\n      value,\n      description,\n      currency,\n      method,\n      tag,\n    };\n  } */\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const { value, description, currency, method, tag } = this.state;\n\n    const despesasInputProps = {\n      type: 'number',\n      placeholder: 'Despesa',\n      id: 'valueInput',\n      labelTxt: 'Valor',\n      value,\n      name: 'value',\n      onChange: this.handleChange,\n    };\n    const descricaoInputProps = {\n      type: 'text',\n      placeholder: 'Detalhes da despesa',\n      id: 'descriptionInput',\n      labelTxt: 'Descrição',\n      value: description,\n      name: 'description',\n      onChange: this.handleChange,\n    };\n    const currencysSelectProps = {\n      value: currency,\n      onChange: this.handleChange,\n      name: 'currency',\n    };\n    const paymentMethodProps = {\n      value: method,\n      name: 'method',\n      onChange: this.handleChange,\n    };\n    const tagSelectProps = {\n      value: tag,\n      name: 'tag',\n      onChange: this.handleChange,\n    };\n\n    return (\n      <form>\n        <Input { ...despesasInputProps } />\n        <Input { ...descricaoInputProps } />\n        <Currencies { ...currencysSelectProps } />\n        <PaymentMethod { ...paymentMethodProps } />\n        <Tag { ...tagSelectProps } />\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  expense: state.wallet.expenseToEdit,\n});\n\nEditForm.propTypes = {\n  expense: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default connect(mapStateToProps, null)(EditForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Header from '../components/Header';\nimport Form from '../components/Form';\nimport Table from '../components/Table';\nimport EditForm from '../components/EditForm';\nimport './Wallet.css';\n\nclass Wallet extends React.Component {\n  render() {\n    const { shoudlEdit } = this.props;\n    return (\n      <main>\n        <Header />\n        { shoudlEdit ? <EditForm /> : <Form /> }\n        <Table />\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  shoudlEdit: state.wallet.edit,\n});\n\nWallet.propTypes = {\n  shoudlEdit: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps, null)(Wallet);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route\n        exact\n        path=\"/\"\n        component={ () => <Login /> }\n      />\n      <Route\n        exact\n        path=\"/carteira\"\n        component={ () => <Wallet /> }\n      />\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Esse reducer será responsável por tratar as informações da pessoa usuária\nimport { USER_LOGIN } from '../actions';\n\nconst initialState = {\n  user: {\n    email: '',\n  },\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case USER_LOGIN:\n    return {\n      ...state.user,\n      email: action.payload,\n    };\n  default: return state;\n  }\n};\n\nexport default userReducer;\n","// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nimport { REQUEST_START,\n  REQUEST_SUCCESS,\n  SAVE_EXPENSE,\n  REMOVE_EXPENSE,\n  EDIT_FORM } from '../actions';\n\nconst initialState = {\n  currencies: [],\n  expenses: [],\n  totalExpenses: 0,\n  fetch: false,\n  edit: false,\n  expenseToEdit: [],\n};\n\nconst walletReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case REQUEST_START:\n    return {\n      ...state,\n      fetch: action.payload.isFetching,\n    };\n  case REQUEST_SUCCESS:\n    return {\n      ...state,\n      currencies: action.payload.currencies,\n      fetch: action.payload.isFetching,\n    };\n  case SAVE_EXPENSE:\n    return {\n      ...state,\n      expenses: [...state.expenses, { id: state.expenses.length,\n        ...action.payload,\n        exchangeRates: action.cotation }],\n    };\n  case REMOVE_EXPENSE:\n    return {\n      ...state,\n      expenses: state.expenses.filter((item) => item.id !== action.payload),\n    };\n  case EDIT_FORM:\n    return {\n      ...state,\n      edit: true,\n      expenseToEdit: [action.payload],\n    };\n  default: return state;\n  }\n};\n\nexport default walletReducer;\n","import { combineReducers } from 'redux';\n\nimport user from './user';\nimport wallet from './wallet';\n\nconst rootReducer = combineReducers({\n  user,\n  wallet,\n});\n\nexport default rootReducer;\n\n// Configure os seus reducers.\n// ATENÇÃO: você obrigatoriamente tem que utilizar as chaves \"user\" e \"wallet\" no seu estado global\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store/store';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}